{
  "Items": [
    {
      "Category": "Using",
      "Scope": "DalDataContext",
      "Content": "using WorkForceManager.Contracts;",
      "Position": "",
      "ArgumentType": ""
    },
    {
      "Category": "Code",
      "Scope": "DalDataContext",
      "Content": "public override Task<int> SaveChangesAsync(CancellationToken cancellationToken = default)\r\n        {\r\n            // \r\n            var entries = this.ChangeTracker.Entries();\r\n\r\n            foreach (var entry in entries)\r\n            {\r\n                if (entry.Entity is BaseEntity e && entry.State == EntityState.Modified)\r\n                {\r\n                    e.UpdateTime = DateTime.Now;\r\n                    entry.Property(nameof(e.CreateTime)).IsModified = false;\r\n                }\r\n            }\r\n            \r\n            return base.SaveChangesAsync(cancellationToken);\r\n        }\r\n\r\n        private void Seed(ModelBuilder modelBuilder)\r\n        {\r\n            modelBuilder.Entity<Company>().HasData(\r\n                new Company \r\n                {\r\n                    Id = Guid.Parse(\"1646088D-3E28-466F-98DC-332DA397C9B0\"),\r\n                    CompanyName=\"Company - A\",\r\n                    CompanySize = CompanySize.Large,\r\n                    Province = \"California\",\r\n                    City = \"Los Angeles\"\r\n                },\r\n                new Company\r\n                {\r\n                    Id = Guid.Parse(\"D8C61D3D-D9E0-4A49-888F-C13260E68115\"),\r\n                    CompanyName = \"Company - B\",\r\n                    CompanySize = CompanySize.Large,\r\n                    Province = \"California\",\r\n                    City = \"San Diego\"\r\n                },\r\n                new Company\r\n                {\r\n                    Id = Guid.Parse(\"BF3D2F02-B1CA-4C20-90C3-89BE44B43B61\"),\r\n                    CompanyName = \"Company - C\",\r\n                    CompanySize = CompanySize.Large,\r\n                    Province = \"Florida\",\r\n                    City = \"Miami\"\r\n                },\r\n                new Company\r\n                {\r\n                    Id = Guid.Parse(\"38145486-175C-486C-8FD8-1C4F8774E009\"),\r\n                    CompanyName = \"Company - D\",\r\n                    CompanySize = CompanySize.Big,\r\n                    Province = \"Arizona\",\r\n                    City = \"Phoenix\"\r\n                }\r\n                );\r\n\r\n            modelBuilder.Entity<Department>().HasData(\r\n                new Department \r\n                {\r\n                    Id = Guid.Parse(\"F7EEF1BD-0D9D-42A7-82F4-41A798E7527D\"),\r\n                    DepartmentName = \"Development\",\r\n                    CompanyId = Guid.Parse(\"1646088D-3E28-466F-98DC-332DA397C9B0\"),               \r\n                },\r\n\t\t\t\tnew Department\r\n                {\r\n                    Id = Guid.Parse(\"F7EEF1BD-0D9D-42A7-82F4-41A798E7527C\"),\r\n                    DepartmentName = \"Web\",\r\n                    CompanyId = Guid.Parse(\"1646088D-3E28-466F-98DC-332DA397C9B0\"),\r\n                    SupDepartmentId = Guid.Parse(\"F7EEF1BD-0D9D-42A7-82F4-41A798E7527D\"),\r\n                },\r\n                new Department\r\n                {\r\n                    Id = Guid.Parse(\"F7EEF1BD-0D9D-42A7-82F4-41A798E7527B\"),\r\n                    DepartmentName = \"Desktop\",\r\n                    CompanyId = Guid.Parse(\"1646088D-3E28-466F-98DC-332DA397C9B0\"),\r\n                    SupDepartmentId = Guid.Parse(\"F7EEF1BD-0D9D-42A7-82F4-41A798E7527D\"),\r\n                },\r\n                new Department\r\n                {\r\n                    Id = Guid.Parse(\"91BB9B7A-F760-4738-B83E-EABD3F2A81A1\"),\r\n                    DepartmentName = \"Custom Service\",\r\n                    CompanyId = Guid.Parse(\"1646088D-3E28-466F-98DC-332DA397C9B0\"),\r\n                },\r\n                new Department\r\n                {\r\n                    Id = Guid.Parse(\"53B21091-AF08-4A46-8783-52E16721DA18\"),\r\n                    DepartmentName = \"Support\",\r\n                    CompanyId = Guid.Parse(\"1646088D-3E28-466F-98DC-332DA397C9B0\"),\r\n                },\r\n                new Department\r\n                {\r\n                    Id = Guid.Parse(\"CA98DCFD-B156-4AF5-9665-779F814DB933\"),\r\n                    DepartmentName = \"Sales\",\r\n                    CompanyId = Guid.Parse(\"BF3D2F02-B1CA-4C20-90C3-89BE44B43B61\"),\r\n                }\r\n                );\r\n            modelBuilder.Entity<Employee>().HasData(\r\n                new Employee\r\n                {\r\n                    DepartmentId = Guid.Parse(\"53B21091-AF08-4A46-8783-52E16721DA18\"),\r\n                    FirstName = \"John\",\r\n                    LastName = \"Wilson\",\r\n\t\t\t\t\tEmail = \"JohnWilson@appeon.com\",\r\n                    Gender = Gender.Female,\r\n                    BirthDay = DateOnly.FromDateTime(new DateTime(2000, 7, 2)),\r\n                    EducateSchool = \"Brown University\",\r\n                    EducateDate = new DateTime(2020,7,1),\r\n                    Status = EmployeeStatus.IS,\r\n                    Postion = \"Technical support\",\r\n                    Degree = DegreeType.AD,\r\n                    HireDate = new DateTime(2020,9,2)\r\n                },\r\n\t\t\t\tnew Employee\r\n                {\r\n                    DepartmentId = Guid.Parse(\"53B21091-AF08-4A46-8783-52E16721DA18\"),\r\n                    FirstName = \"Tom\",\r\n                    LastName = \"Jackson\",\r\n\t\t\t\t\tEmail = \"TomJackson@appeon.com\",\r\n                    Gender = Gender.Female,\r\n                    BirthDay = DateOnly.FromDateTime(new DateTime(2002, 4, 25)),\r\n                    EducateSchool = \"Yale University\",\r\n                    EducateDate = new DateTime(2023, 7, 15),\r\n                    Status = EmployeeStatus.FT,\r\n                    Postion = \"Test engineer\",\r\n                    Degree = DegreeType.PD,\r\n                    HireDate = new DateTime(2024, 5, 02),\r\n                },\r\n\t\t\t\tnew Employee\r\n                {\r\n\t\t\t\t\tId = Guid.Parse(\"F7EEF1BD-0D9D-42A7-82F5-41A798575276\"),\r\n                    DepartmentId = Guid.Parse(\"53B21091-AF08-4A46-8783-52E16721DA18\"),\r\n                    FirstName = \"Bertha\",\r\n                    LastName = \"Johnson\",\r\n\t\t\t\t\tEmail = \"BerthaJohnson@appeon.com\",\r\n                    Gender = Gender.Male,\r\n                    BirthDay = DateOnly.FromDateTime(new DateTime(1987, 9, 15)),\r\n                    EducateSchool = \"Cornell University\",\r\n                    EducateDate = new DateTime(2008, 7, 15),\r\n                    Status = EmployeeStatus.IS,\r\n                    Postion = \".Net development engineer\",\r\n                    Degree = DegreeType.BD,\r\n                    HireDate = new DateTime(2023, 4, 11),\r\n                },\r\n\t\t\t\tnew Employee\r\n                {\r\n                    DepartmentId = Guid.Parse(\"53B21091-AF08-4A46-8783-52E16721DA18\"),\r\n                    FirstName = \"Bella\",\r\n                    LastName = \"Miller\",\r\n\t\t\t\t\tEmail = \"BellaMiller@appeon.com\",\r\n                    Gender = Gender.Male,\r\n                    BirthDay = DateOnly.FromDateTime(new DateTime(2000, 9, 15)),\r\n                    EducateSchool = \"Yale University\",\r\n                    EducateDate = new DateTime(2014, 7, 1),\r\n                    Status = EmployeeStatus.IS,\r\n                    Postion = \"Development engineer\",\r\n                    Degree = DegreeType.OT,\r\n                    HireDate = new DateTime(2023, 4, 11),\r\n                    ManagerId = Guid.Parse(\"F7EEF1BD-0D9D-42A7-82F5-41A798575276\")\r\n                },\r\n                new Employee\r\n                {\r\n                    DepartmentId = Guid.Parse(\"53B21091-AF08-4A46-8783-52E16721DA18\"),\r\n                    FirstName = \"Donna\",\r\n                    LastName = \"Brown\",\r\n\t\t\t\t\tEmail = \"DonnaBrown@appeon.com\",\r\n                    Gender = Gender.Male,\r\n                    BirthDay = DateOnly.FromDateTime(new DateTime(1998, 9, 15)),\r\n                    EducateSchool = \"Yale University\",\r\n                    EducateDate = new DateTime(2023, 7, 1),\r\n                    Status = EmployeeStatus.RN,\r\n                    Postion = \"Development engineer\",\r\n                    Degree = DegreeType.BD,\r\n                    HireDate = new DateTime(2023, 4, 11),\r\n                    ManagerId = Guid.Parse(\"F7EEF1BD-0D9D-42A7-82F5-41A798575276\")\r\n                },\r\n                new Employee\r\n                {\r\n                    DepartmentId = Guid.Parse(\"53B21091-AF08-4A46-8783-52E16721DA18\"),\r\n                    FirstName = \"Eileen\",\r\n                    LastName = \"Smith\",\r\n\t\t\t\t\tEmail = \"EileenSmith@appeon.com\",\r\n                    Gender = Gender.Male,\r\n                    BirthDay = DateOnly.FromDateTime(new DateTime(1995, 7, 2)),\r\n                    EducateSchool = \"Duke University\",\r\n                    EducateDate = new DateTime(2020, 7, 1),\r\n                    Status = EmployeeStatus.FT,\r\n                    Postion = \"Senior customer service\",\r\n                    Degree = DegreeType.DD,\r\n                    HireDate = new DateTime(2020, 9, 2)\r\n                },\r\n\t\t\t\tnew Employee\r\n                {\r\n                    DepartmentId = Guid.Parse(\"53B21091-AF08-4A46-8783-52E16721DA18\"),\r\n                    FirstName = \"Amy\",\r\n                    LastName = \"Smith\",\r\n\t\t\t\t\tEmail = \"AmySmith@appeon.com\",\r\n                    Gender = Gender.Male,\r\n                    BirthDay = DateOnly.FromDateTime(new DateTime(1995, 7, 2)),\r\n                    EducateSchool = \"Duke University\",\r\n                    EducateDate = new DateTime(2020, 7, 1),\r\n                    Status = EmployeeStatus.FT,\r\n                    Postion = \"Senior customer service\",\r\n                    Degree = DegreeType.DD,\r\n                    HireDate = new DateTime(2020, 9, 2)\r\n                }\r\n                );\r\n        }",
      "Position": "EndOfClass",
      "ArgumentType": ""
    },
    {
      "Category": "Code",
      "Scope": "DalDataContext",
      "Content": "this.Seed(modelBuilder);",
      "Position": "EndOfOnModelCreating",
      "ArgumentType": ""
    }
  ]
}